<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1. Our guide waiting for Game Of Thrones tour" xml:space="preserve">
    <value>1. Nuestro guía esperando la gira de Juego de Tronos</value>
  </data>
  <data name="2.Our guide waiting for not Game Of Thrones tour" xml:space="preserve">
    <value>2.Nuestro guía esperando la gira de Game of Thrones</value>
  </data>
  <data name="3.Our office at Pile Squere.&lt;br /&gt; Tiha 2, 20 000 Dubrovnik." xml:space="preserve">
    <value>3. Nuestra oficina en Pile Squere. &lt;br /&gt; Tiha 2, 20 000 Dubrovnik.</value>
  </data>
  <data name="MEETING POINT" xml:space="preserve">
    <value>PUNTO DE ENCUENTRO</value>
  </data>
  <data name="The meeting point is &lt;strong&gt;Amerling fountain on Brsalje Square&lt;/strong&gt; (&lt;span&gt;Ul. Svetog Đurđa 4, 20000, Dubrovnik&lt;/span&gt;), located in front of “Dubravka” restaurant (Ul. Brsalje 1). The Guide will be waiting next to the Amerling fountain with a Targaryan or Dubrovnik Tours flag.&lt;br&gt;&lt;br&gt;&quot; +&#xD;&#xA;                   &quot;If you can't find our guide please come to our office which is located on Pile Squere in front of tourist information center (&lt;span&gt;Ul. Tiha, 20000, Dubrovnik&lt;/span&gt;)" xml:space="preserve">
    <value>El punto de encuentro es la &lt;strong&gt; fuente Amerling en la plaza Brsalje &lt;/strong&gt; (&lt;span&gt; Ul. Svetog Đurđa 4, 20000, Dubrovnik &lt;/span&gt;), ubicada frente al restaurante "Dubravka" (Ul. Brsalje 1). El guía estará esperando junto a la fuente Amerling con una bandera de Targaryan o Dubrovnik Tours. &lt;br&gt; &lt;br&gt; "+
                    "Si no puede encontrar nuestra guía, visite nuestra oficina que se encuentra en Pile Squere, frente al centro de información turística (&lt;span&gt; Ul. Tiha, 20000, Dubrovnik &lt;/span&gt;)</value>
  </data>
  <data name="You can also get to “Pile Square” (marked on the &lt;span&gt; CITY TIMETABLE&lt;/span&gt; as “Old Town”) by public transport with the following bus lines (and go on foot for there for only a few mins). You can click on the links below to see a detailed timetable of a specific bus line." xml:space="preserve">
    <value>También puede llegar a "Pile Square" (marcado en el &lt;span&gt; CITY TIMETABLE &lt;/span&gt; como "Old Town") en transporte público con las siguientes líneas de autobús (e ir a pie por allí durante solo unos minutos). Puede hacer clic en los enlaces a continuación para ver un horario detallado de una línea de autobús específica.</value>
  </data>
</root>