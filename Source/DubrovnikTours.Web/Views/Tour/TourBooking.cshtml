@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model DubrovnikTours.Web.Models.Tour.TourViewModel
<div class="page page-tour">
    <div class="page-header">
        <div class="container">
            <h3 id="service-type">@Localizer[@Model.TypeName]</h3>
        </div>
    </div>
    <div class="container development-container">
        <p class="text-info">Application ID:</p>
        <input id="application-id" value="@Model.ApplicationId" class="form-control" />
        <p class="text-info">Tour ID:</p>
        <input id="tour-id" value="@Model.Id" class="form-control" />
        <p class="text-info">Tour Type:</p>
        <input id="type-id" value="@Model.TypeId" class="form-control" />
        <p class="text-info">Tour Name:</p>
        <input value="@Model.Title" class="form-control" />
        <p class="text-info">Discount (%)</p>
        <input value="@Model.DiscountPercent" class="form-control" />
        <p class="text-info">Using nested times:</p>
        <input id="time-nesting" value="@Model.TimeNesting" />
    </div>
    <div class="tour-info">
        <div class="tour-info-text">
            <div class="tour-info-text-top">
                <div class="tour-info-text-top-back">
                    <a id="go-back" class="btn-back">
                        <svg width="55" height="55" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <circle r="25"
                                    transform="matrix(-1 0 0 1 26 26)"
                                    stroke="#18b0d0"
                                    fill="transparent"
                                    stroke-width="2" />
                            <path d="M39 29H16L26.3459  18"
                                  stroke="#18b0d0"
                                  stroke-width="3"
                                  stroke-linecap="round"
                                  stroke-linejoin="round" />
                        </svg>
                    </a>
                </div>
                @if (Model.DiscountPercent.HasValue)
                {
                    <div class="tour-info-card-discount">
                        <span>SAVE</span>
                        <strong>@Model.DiscountPercent%</strong>
                    </div>
                }
            </div>
            <div class="tour-info-text-infos">
                <h3 id="tour-title">@Model.Title</h3>
                <ul class="tour-info-text-infos-list">
                    <li class="tour-info-text-infos-list-item">
                        <strong>@Localizer["DEPARTURE"]:</strong>
                        @if (!string.IsNullOrEmpty(Model.DisplayDepartureTimes) && @Model.DisplayDepartureTimes.Length == 149)
                        {
                            @Localizer["On request"]
                        }

                        else if (!string.IsNullOrEmpty(Model.DisplayDepartureTimes) && @Model.DisplayDepartureTimes.Length <= 149 || @Model.DisplayDepartureTimes.Length >= 149)
                        {
                            @Model.DisplayDepartureTimes
                        }

                        else
                        {
                            @Localizer["On request"]
                        }
                    </li>
                    <li class="tour-info-text-infos-list-item"><strong>@Localizer["PRICE"]:</strong>&nbsp;@Model.DisplayPrice</li>
                    <li class="tour-info-text-infos-list-item"><strong>@Localizer["Duration"]:</strong>&nbsp;@Model.DisplayDuration @Localizer["hours"]</li>
                </ul>
            </div>
            <div class="tour-info-text-content scrollbar-outer">
                @Html.Raw(Model.Content)
            </div>
            <div class="tour-info-text-footer">
                <div class="comma-target-box">
                    @Html.Raw(Model.IsIncluded)
                    @Html.Raw(Model.NotIncluded)
                </div>
                <div class="tour-info-text-footer-block">
                    <br /><strong>@Localizer["MEETING POINT"]:</strong>
                    <p>@Localizer["Pile Square, in front of the Tourist Information Center. The guide will have a blue umbrella with CITY TOURS sign."]</p>
                </div>
            </div>
        </div>
        <div class="tour-info-booking">
            <div id="tour-fix"></div>
            <div class="tour-info-gallery">
                <div class="tour-info-gallery-items">
                    @foreach (var image in Model?.Images)
                    {
                        <div class="tour-info-gallery-item" data-thumb="@Url.Content(image?.Url)">
                            <img src="@Url.Content(image?.Url)" alt="@Url.Content(image?.AltDescription)" />
                        </div>
                    }
                </div>
            </div>
            <form id="booking" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" class="tour-info-form">
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.DisplayDate">@Localizer["Date"]</label>
                    <input asp-for="@Model.BookingModel.DisplayDate" class="tour-datepicker form-control" id="date" readonly placeholder="@Localizer["Select departure date"]..." />
                </div>
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.DisplayTourTime">@Localizer["Time"]</label>
                    <select asp-for="@Model.BookingModel.DisplayTourTime" id="time" class="form-control"></select>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.NumberOfPeople">@Localizer["Number of persons"]</label>
                    <input asp-for="@Model.BookingModel.NumberOfPeople" min="1" id="number-of-people" type="number" class="form-control" placeholder="Enter number of people" value="1" />
                </div>
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.FullName">@Localizer["Full name"] *</label>
                    <input asp-for="@Model.BookingModel.FullName" id="full-name" class="form-control" placeholder="@Localizer["Enter your full name"]..." />
                </div>
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.Phone">@Localizer["Phone"] *</label>
                    <input asp-for="@Model.BookingModel.Phone" id="phone" class="form-control" placeholder="@Localizer["Enter your phone number"]..." />
                </div>
                <div class="form-group">
                    <label asp-for="@Model.BookingModel.Email">@Localizer["E-mail"] *</label>
                    <input asp-for="@Model.BookingModel.Email" id="email" class="form-control" placeholder="@Localizer["Enter your e-mail"]..." />
                </div><br />
                <div class="form-group form-group-half">
                    <label asp-for="@Model.BookingModel.AdditionalInfo">@Localizer["Additional info (optional)"]</label>
                    <textarea asp-for="@Model.BookingModel.AdditionalInfo" id="additional-info" class="form-control" rows="5"></textarea>
                </div>
                <div class="form-group">
                </div>
                <div class="form-group">
                    <button id="submit-form" class="btn btn-primary" href="javascript:void(0)" type="button">@Localizer["BOOK NOW"]</button>
                </div>
                <div class="error" asp-validation-summary="All"></div>
            </form>
        </div>
    </div>
    <div class="modal payment-method-modal">
        <div class="modal-window small">
            <div class="modal-window-close"><img src="~/ico/close.svg" alt="close-btn" /></div>
            <div class="modal-window-body">
                <h3>@Localizer["CHOOSE YOUR PAYMENT METHOD"]</h3>
                <strong>@Model.Title</strong>
                <p>
                    @Localizer["You can choose to make the full payment immediately"]
                    @{if (Model.DiscountPercent.HasValue)
                        { <text > (@Model.DiscountPercent.Value % @Localizer["discount!"]) </text>}
                    }
                    @Localizer["or make a 20% deposit and pay the rest on site(full price)."]
                </p>
                <div class="modal-window-divider"></div>
                <span>@Localizer["There will be no refunds for the deposit you give now."]</span>
                <div id="payment-buttons" class="payment-method-modal-buttons">

                    <button id="btn-checkout-deposit" class="btn btn-ghost-primary btn-checkout"
                            data-callback-url="@Model.PaymentCallbackEndpoint"
                            data-language="@Model.PaymentLanguage">
                        @Localizer["DEPOSIT"]
                    </button>

                    <button id="btn-checkout-full" class="btn btn-primary btn-checkout"
                            data-callback-url="@Model.PaymentCallbackEndpoint"
                            data-language="@Model.PaymentLanguage">
                        @Localizer["FULL PAYMENT"]
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal payment-failed-modal">
        <div class="modal-window small">
            <div class="modal-window-close"><img src="~/ico/close.svg" alt="close-btn" /></div>
            <div class="modal-window-body">
                <img src="~/ico/fail.svg" alt="fail-btn" />
                <h3>@Localizer["BOOKING FAILED!"]</h3>
                <strong>@Model.Title</strong>
                <p>
                    @Localizer["Something went wrong with your booking process. Please check your payment method then try again."]
                </p>
                <div class="modal-window-divider"></div>
                <span>
                    @Localizer["If payments doesn’t seem to work, kindly "] <a href="contact.html">@Localizer["Contact us"]</a>@Localizer[" to try and resolve this issue if it’s on our end."]
                </span>
                <div class="payment-method-modal-buttons">
                    <button id="cancel-on-failed" class="btn btn-ghost-primary">@Localizer["CANCEL"]</button>
                    <button id="book-again-on-failed" class="btn btn-primary">@Localizer["BOOK AGAIN"]</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal payment-successful-modal">
        <div class="modal-window small">
            <div class="modal-window-close"><img src="~/ico/close.svg" alt="close-btn" /></div>
            <div class="modal-window-body">
                <img src="~/ico/success.svg" alt="sucess-btn" />
                <h3>@Localizer["YOU'RE BOOKED"]</h3>
                <strong>@Model.Title</strong>
                <p>
                    @Localizer["Thank you for booking our tour!"]
                </p>
                <div class="modal-window-divider"></div>
                <span>
                    @Localizer["If you don’t receive a confirmation e-mail, please check your spam folder first or "]
                    <a href="contact.html">@Localizer["Contact us"]</a>@Localizer[" for further assistance."]
                </span>
                <div class="payment-successful-modal-button">
                    <button id="booking-done" class="btn btn-primary">@Localizer["DONE"]</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="@Model.PaymentEndpoint"></script>
    <script>
    (function(global) {
                        var yearlyVacations = {
            @{
                foreach (var yearlyVacation in Model.Vacations)
                        {
                    @: @yearlyVacation.Key: [
                    foreach (var vacation in yearlyVacation.Value)
                    {
                        @: {
                            @: start: new Date(@vacation.Start.Year, @(vacation.Start.Month - 1), @vacation.Start.Day, @vacation.Start.Hour, @vacation.Start.Minute, @vacation.Start.Second).getTime(),
                            @: end: new Date(@vacation.End.Year, @(vacation.End.Month - 1), @vacation.End.Day, @vacation.End.Hour, @vacation.End.Minute, @vacation.End.Second).getTime()
                        @: },
                    }
                    @: ],
                }
            }
        };

        var inactiveDuringVacation = @(Model.InactiveDuringVacation ? "true" : "false");
        global.createDatePicker('.tour-datepicker', inactiveDuringVacation, yearlyVacations);
    })(window);
    </script>
}

<environment include="Development">
    <script src="~/js/tours/tours.js" type="text/javascript"></script>
    <script src="~/js/bookingTimes/bookingTimes.js" type="text/javascript"></script>
</environment>

<environment exclude="Development">
    <script src="~/js/tours/tours.min.js" type="text/javascript"></script>
    <script src="~/js/bookingTimes/bookingTimes.min.js" type="text/javascript"></script>
</environment>